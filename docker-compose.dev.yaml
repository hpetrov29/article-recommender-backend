services:
  mysql:
    image: mysql:8.0
    container_name: mysql-container
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init_scripts:/docker-entrypoint-initdb.d
    networks:
      - backend
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  mongo:
    image: mongo:latest
    container_name: mongo-container
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_INITDB_ROOT_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_INITDB_ROOT_PASSWORD}"
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - backend
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 20s
      retries: 10
      start_period: 30s
      timeout: 10s

  api:
    build:
      context: .
      dockerfile: Dockerfile
    image: golang-api:latest
    container_name: golang-api
    environment:
      SQLDB_USER: "${SQLDB_USER}"
      SQLDB_PASSWORD: "${SQLDB_PASSWORD}"
      SQLDB_HOST: "${SQLDB_HOST}"
      SQLDB_NAME: "${SQLDB_NAME}"
      SQLDB_MAX_IDLE_CONNECTIONS: "${SQLDB_MAX_IDLE_CONNECTIONS}"
      SQLDB_MAX_OPEN_CONNECTIONS: "${SQLDB_MAX_OPEN_CONNECTIONS}"
      SQLDB_DISABLE_TLS: "${SQLDB_DISABLE_TLS}"
      NOSQLDB_USER: "${NOSQLDB_USER}"
      NOSQLDB_PASSWORD: "${NOSQLDB_PASSWORD}"
      NOSQLDB_HOST: "${NOSQLDB_HOST}"
      NOSQLDB_NAME: "${NOSQLDB_NAME}"
      PORT: "${PORT}"
      ALLOWED_ORIGINS: "${ALLOWED_ORIGINS}"
    ports:
      - "8000:8000"
    depends_on:
      mysql:
        condition: service_healthy
      mongo:
        condition: service_healthy
    networks:
      - backend
    env_file:
      - .env

networks:
  backend:

volumes:
  mysql_data:
  mongo_data:
